"use strict";(self.webpackChunkpapillonbits=self.webpackChunkpapillonbits||[]).push([[944],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),preview_errors=__webpack_require__("./node_modules/@storybook/core-events/dist/errors/preview-errors.mjs"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new preview_errors.is({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler}},"./packages/components/src/primer/Form/Checkbox/__tests__/Checkbox.int.story.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{custom:()=>custom,default:()=>Checkbox_int_story,isChecked:()=>isChecked,isCheckedInactive:()=>isCheckedInactive,isNotChecked:()=>isNotChecked,isNotCheckedInactive:()=>isNotCheckedInactive,text:()=>Checkbox_int_story_text});var dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),addon_jest_dist=__webpack_require__("./node_modules/@storybook/addon-jest/dist/index.mjs"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),checkboxState={active:"active",inactive:"inactive"},inputType={checkbox:"checkbox"},_jest_test_results=(prop_types.string,prop_types.string,prop_types.string,(0,prop_types.shape)({describedBy:prop_types.string}).isRequired,(0,prop_types.oneOf)(Object.keys(inputType)),prop_types.bool,prop_types.string,prop_types.func.isRequired,(0,prop_types.oneOf)(Object.keys(checkboxState)),__webpack_require__("./.jest-test-results.json")),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Checkbox=__webpack_require__("./packages/components/build/index.js").K.Form.Checkbox.Checkbox;const Checkbox_int_story={title:"Primer/Atom/Form/Checkbox",component:Checkbox,decorators:[(0,addon_jest_dist.x)({results:_jest_test_results})],parameters:{storySource:{source:"import { action } from '@storybook/addon-actions'\nimport { withTests } from '@storybook/addon-jest'\nimport { checkboxState } from '../Checkbox.prop'\nimport results from '../../../../../../../.jest-test-results.json'\n\nconst Checkbox =\n  process.env.NODE_ENV === 'develop' || process.env.NODE_ENV === 'test'\n    ? require('../../../../index').primer.Form.Checkbox.Checkbox\n    : require('../../../../../build').primer.Form.Checkbox.Checkbox\n\nexport default {\n  title: 'Primer/Atom/Form/Checkbox',\n  component: Checkbox,\n  decorators: [withTests({ results })],\n  parameters: { jest: ['Checkbox.int.test.js'] },\n  excludeStories: ['ariaAttr', 'text', 'custom'],\n}\n\nconst ariaAttr = {\n  describedBy: 'help-text-for-checkbox',\n}\n\nexport const text = {\n  isChecked: 'is checked',\n  isNotChecked: 'is not checked',\n}\n\nexport function custom(onChange) {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={true} onChange={onChange} text=\"is checked\" />\n}\n\nexport function isChecked() {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={true} onChange={action('onChange')} text={text.isChecked} />\n}\n\nexport function isCheckedInactive() {\n  return (\n    <Checkbox ariaAttr={ariaAttr} isChecked={true} onChange={action('onChange')} text={text.isChecked} state={checkboxState.inactive} />\n  )\n}\n\nexport function isNotChecked() {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={false} onChange={action('onChange')} text={text.isNotChecked} />\n}\n\nexport function isNotCheckedInactive() {\n  return (\n    <Checkbox ariaAttr={ariaAttr} isChecked={false} onChange={action('onChange')} text={text.isNotChecked} state={checkboxState.inactive} />\n  )\n}\n",locationsMap:{text:{startLoc:{col:20,line:23},endLoc:{col:1,line:26},startBody:{col:20,line:23},endBody:{col:1,line:26}},custom:{startLoc:{col:7,line:28},endLoc:{col:1,line:30},startBody:{col:7,line:28},endBody:{col:1,line:30}},"is-checked":{startLoc:{col:7,line:32},endLoc:{col:1,line:34},startBody:{col:7,line:32},endBody:{col:1,line:34}},"is-checked-inactive":{startLoc:{col:7,line:36},endLoc:{col:1,line:40},startBody:{col:7,line:36},endBody:{col:1,line:40}},"is-not-checked":{startLoc:{col:7,line:42},endLoc:{col:1,line:44},startBody:{col:7,line:42},endBody:{col:1,line:44}},"is-not-checked-inactive":{startLoc:{col:7,line:46},endLoc:{col:1,line:50},startBody:{col:7,line:46},endBody:{col:1,line:50}}}},jest:["Checkbox.int.test.js"]},excludeStories:["ariaAttr","text","custom"]};var ariaAttr={describedBy:"help-text-for-checkbox"},Checkbox_int_story_text={isChecked:"is checked",isNotChecked:"is not checked"};function custom(onChange){return(0,jsx_runtime.jsx)(Checkbox,{ariaAttr,isChecked:!0,onChange,text:"is checked"})}custom.displayName="custom";var isChecked=function isChecked(){return(0,jsx_runtime.jsx)(Checkbox,{ariaAttr,isChecked:!0,onChange:(0,dist.aD)("onChange"),text:Checkbox_int_story_text.isChecked})};isChecked.displayName="isChecked";var isCheckedInactive=function isCheckedInactive(){return(0,jsx_runtime.jsx)(Checkbox,{ariaAttr,isChecked:!0,onChange:(0,dist.aD)("onChange"),text:Checkbox_int_story_text.isChecked,state:checkboxState.inactive})};isCheckedInactive.displayName="isCheckedInactive";var isNotChecked=function isNotChecked(){return(0,jsx_runtime.jsx)(Checkbox,{ariaAttr,isChecked:!1,onChange:(0,dist.aD)("onChange"),text:Checkbox_int_story_text.isNotChecked})};isNotChecked.displayName="isNotChecked";var isNotCheckedInactive=function isNotCheckedInactive(){return(0,jsx_runtime.jsx)(Checkbox,{ariaAttr,isChecked:!1,onChange:(0,dist.aD)("onChange"),text:Checkbox_int_story_text.isNotChecked,state:checkboxState.inactive})};isNotCheckedInactive.displayName="isNotCheckedInactive",isChecked.parameters={...isChecked.parameters,docs:{...isChecked.parameters?.docs,source:{originalSource:"function isChecked() {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={true} onChange={action('onChange')} text={text.isChecked} />;\n}",...isChecked.parameters?.docs?.source}}},isCheckedInactive.parameters={...isCheckedInactive.parameters,docs:{...isCheckedInactive.parameters?.docs,source:{originalSource:"function isCheckedInactive() {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={true} onChange={action('onChange')} text={text.isChecked} state={checkboxState.inactive} />;\n}",...isCheckedInactive.parameters?.docs?.source}}},isNotChecked.parameters={...isNotChecked.parameters,docs:{...isNotChecked.parameters?.docs,source:{originalSource:"function isNotChecked() {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={false} onChange={action('onChange')} text={text.isNotChecked} />;\n}",...isNotChecked.parameters?.docs?.source}}},isNotCheckedInactive.parameters={...isNotCheckedInactive.parameters,docs:{...isNotCheckedInactive.parameters?.docs,source:{originalSource:"function isNotCheckedInactive() {\n  return <Checkbox ariaAttr={ariaAttr} isChecked={false} onChange={action('onChange')} text={text.isNotChecked} state={checkboxState.inactive} />;\n}",...isNotCheckedInactive.parameters?.docs?.source}}}}}]);